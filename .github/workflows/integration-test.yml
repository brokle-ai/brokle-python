name: Integration Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run integration tests daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  integration-test:
    name: Integration Test with Backend
    runs-on: ubuntu-latest

    # Only run if backend is available (optional)
    # if: github.repository == 'brokle-ai/brokle-python'

    services:
      # If you want to test against a local backend instance
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: brokle_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - name: Checkout SDK code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install SDK dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Run SDK unit tests
      run: |
        python -m pytest tests/ -v

    - name: Run integration tests (without backend)
      run: |
        python test_integration.py

    - name: Run manual tests
      run: |
        python test_manual.py

    # Uncomment when you have a test backend setup
    # - name: Setup test backend
    #   run: |
    #     # Start your test backend here
    #     # docker run -d --name test-backend your-backend:latest
    #     # Or use a public test endpoint
    #     echo "Backend setup would go here"

    # - name: Run integration tests with backend
    #   env:
    #     BROKLE_API_KEY: ${{ secrets.TEST_API_KEY }}
    #     BROKLE_HOST: http://localhost:8080
    #   run: |
    #     python test_integration.py --api-key $BROKLE_API_KEY

    - name: Test package installation
      run: |
        # Test that the package can be installed and imported
        python -c "
        import brokle
        from brokle import configure, Brokle
        from brokle.config import Config, validate_environment_name
        print('âœ… All imports successful')

        # Test environment validation
        validate_environment_name('test')
        print('âœ… Environment validation works')

        # Test config creation
        config = Config(
            api_key='bk_test',
            environment='test'
        )
        print('âœ… Config creation works')
        print('ðŸŽ‰ Integration test passed!')
        "

  publish-test:
    name: Test Publishing Process
    runs-on: ubuntu-latest
    needs: integration-test
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: |
        python -m build

    - name: Check package
      run: |
        python -m twine check dist/*

    - name: Test local installation
      run: |
        pip install dist/*.whl
        python -c "import brokle; print('âœ… Package installs correctly')"

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: test-dist-files
        path: dist/
        retention-days: 1
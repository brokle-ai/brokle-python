name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      target:
        description: 'Publish target'
        required: true
        default: 'pypi'
        type: choice
        options:
        - pypi
        - testpypi

jobs:
  publish:
    name: Publish to ${{ github.event.inputs.target || 'PyPI' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Extract version information
      id: version
      run: |
        if [ "${{ github.event_name }}" = "release" ]; then
          VERSION="${{ github.event.release.tag_name }}"
          VERSION="${VERSION#v}"  # Remove 'v' prefix if present
        else
          VERSION=$(python -c "from brokle._version import __version__; print(__version__)")
        fi
        echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
        echo "Publishing version: ${VERSION}"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: |
        python -m build

    - name: Check package
      run: |
        python -m twine check dist/*

    - name: Publish to Test PyPI
      if: github.event.inputs.target == 'testpypi'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
      run: |
        python -m twine upload --repository testpypi dist/* --verbose

    - name: Publish to PyPI
      if: github.event_name == 'release' || github.event.inputs.target == 'pypi'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        python -m twine upload dist/* --verbose

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/